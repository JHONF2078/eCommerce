services:
  orders-microservice.api:
    container_name: orders-microservice
    image: ordersmicroserviceapi
    build:
      context: .
      dockerfile: OrdersService.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      MONGODB_HOST: ${MONGODB_HOST}
      MONGODB_PORT: ${MONGODB_PORT}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      USERSMICROSERVICENAME: ${APIGATEWAY_HOST}
      USERSMICROSERVICEPORT: ${ASPNETCORE_HTTP_PORTS}
      PRODUCTSMICROSERVICENAME: ${APIGATEWAY_HOST}
      PRODUCTSMICROSERVICEPORT: ${ASPNETCORE_HTTP_PORTS}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      RABBITMQ_HOSTNAME: ${RABBITMQ_HOSTNAME}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_PRODUCTS_EXCHANGE: ${RABBITMQ_PRODUCTS_EXCHANGE}
    ports:
      - "7001:${ASPNETCORE_HTTP_PORTS}"
    networks:
      - orders-mongodb-network
      - ecommerce-network
    depends_on:
      - mongodb-container
      - rabbitmq
   

  mongodb-container:
    container_name: mongo-container
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ../../mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - orders-mongodb-network
    

  products-microservice:
    container_name: products-microservice
    image: products-microservice:latest
    build:
      context: ../ProductsService
      dockerfile: ProductsService.API/Dockerfile
    environment:
      ASPNETCORE_HTTP_PORTS: ${ASPNETCORE_HTTP_PORTS}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      RABBITMQ_HOSTNAME: ${RABBITMQ_HOSTNAME}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_PRODUCTS_EXCHANGE: ${RABBITMQ_PRODUCTS_EXCHANGE}
    ports:
      - "6001:${ASPNETCORE_HTTP_PORTS}"
    networks:
      - products-mysql-network
      - ecommerce-network
    depends_on:
      - mysql-container
      - rabbitmq
  

  mysql-container:
    container_name: mysql-container
    image: mysql:8.3.0
    environment:
     - MYSQL_ROOT_PASSWORD=admin
    ports:
      - "3307:3306"
    volumes:
      - ../../mysql-init:/docker-entrypoint-initdb.d
    networks:
      - products-mysql-network

  users-microservice:
    container_name: users-microservice
    image: users-microservice:latest
    build:
      context: ../UsersService
      dockerfile: UsersService.API/Dockerfile
    environment:
      ASPNETCORE_HTTP_PORTS: ${ASPNETCORE_HTTP_PORTS}
      ASPNETCORE_HTTP_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
       - "5000:${USERSASPNETCORE_HTTP_PORTS}"
    networks:
      - users-postgres-network
      - ecommerce-network
    depends_on:
      - postgres-container


  postgres-container:
     container_name: postgres-container
     image: postgres:16.1
     environment:
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
       POSTGRES_DB: ${POSTGRES_DATABASE}
     ports:
       - "5433:${POSTGRES_PORT}"
     volumes:
        - ../../postgres-init:/docker-entrypoint-initdb.d
     networks:
       - users-postgres-network


  redis-container:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - E:\projects\microservices\eCommerce:/data
    networks:
      - ecommerce-network

    
  apigateway-container:
    container_name: apigateway-container
    image: apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "4000:8080"
    networks:
      - ecommerce-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672" # RabbitMQ default port
      - "15672:15672" # RabbitMQ management UI
    environment:
      - RABBITMQ_DEFAULT_USER=user # Default rabbit  username  is guest
      - RABBITMQ_DEFAULT_PASS=password # Default rabbit password is guest
      - RABBITMQ_ENABLED_PLUGINS_FILE=/etc/rabbitmq/enabled_plugins
    volumes:
       - ../../rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - ecommerce-network
    


networks:
  orders-mongodb-network:
    driver: bridge
  products-mysql-network:
    driver: bridge
  users-postgres-network:
    driver: bridge
  ecommerce-network:
    driver: bridge
